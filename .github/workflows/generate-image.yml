name: Generate Image

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Image prompt'
        required: true
      image_url:
        description: 'Existing image URL (optional)'
        required: false
      mask_url:
        description: 'Mask URL (optional)'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies and generate image
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          pip install requests
          python - << 'EOF'
import os
import json
import time
import requests

prompt = os.getenv('INPUT_PROMPT')
image_url = os.getenv('INPUT_IMAGE_URL')
mask_url = os.getenv('INPUT_MASK_URL')
size = '512x512'
n = 1

endpoint = 'https://api.openai.com/v1/images/generations'
payload = {'prompt': prompt, 'n': n, 'size': size}

if image_url:
    endpoint = 'https://api.openai.com/v1/images/edits'
    payload['image'] = image_url
    if mask_url:
        payload['mask'] = mask_url

headers = {
    'Authorization': f"Bearer {os.environ['OPENAI_API_KEY']}",
    'Content-Type': 'application/json'
}

resp = requests.post(endpoint, headers=headers, json=payload).json()
url = resp['data'][0]['url']

# Download image
fname = f"{int(time.time())}.png"
os.makedirs('images', exist_ok=True)
img_data = requests.get(url).content
with open(f'images/{fname}', 'wb') as img_file:
    img_file.write(img_data)

# Update index.json
index_file = 'images/index.json'
if os.path.exists(index_file):
    imgs = json.load(open(index_file))
else:
    imgs = []
imgs.insert(0, fname)
with open(index_file, 'w') as idx:
    json.dump(imgs, idx)

# Commit & push
os.system('git config user.name "github-actions[bot]"')
os.system('git config user.email "github-actions[bot]@users.noreply.github.com"')
os.system('git add images')
os.system('git commit -m "Add image for prompt: ' + prompt.replace('"', '')[:20] + '..."')
os.system('git push')
EOF

      - name: Done
        run: echo "Image generated and committed."
